name: 💫 Next.js Build and Push

on:
  push:
    branches: [master]

concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup_env:
    name: ⚙️ Setup environment
    runs-on: ubuntu-24.04
    steps:
      - name: Add SHORT_SHA env property
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA::7}`" >> $GITHUB_ENV

      - name: Put commit msg in environment
        run: echo "COMMIT_MSG=${{ github.event.head_commit.message }}" >> $GITHUB_ENV

      - name: Escape commit message
        run: |
          echo "COMMIT_MSG=$(echo $COMMIT_MSG | tr -d \'\\\")" >> $GITHUB_ENV

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Set build start in env variable
        run: echo "BUILD_START=$(date +%s)" >> $GITHUB_ENV

    outputs:
      short_sha: ${{ env.SHORT_SHA }}
      commit_msg: ${{ env.COMMIT_MSG }}
      branch_name: ${{ env.BRANCH_NAME }}
      build_start: ${{ env.BUILD_START }}

  build_amd64:
    name: 🔨 Build AMD64 Docker Image
    runs-on: ubuntu-24.04
    needs: setup_env
    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push amd64 image
        uses: docker/build-push-action@v4
        with:
          outputs: "type=registry,push=true"
          context: .
          platforms: linux/amd64
          provenance: false
          build-args: |
            VERSION=${{ needs.setup_env.outputs.short_sha }}
            COMMIT_MSG=${{ needs.setup_env.outputs.commit_msg }}
            BUILD_START=${{ needs.setup_env.outputs.build_start }}
          tags: unbindapp/unbind-nextjs:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }}-amd64
          cache-from: type=gha,scope=amd64-nextjs
          cache-to: type=gha,scope=amd64-nextjs,mode=max

  build_arm64:
    name: 🔨 Build ARM64 Docker Image
    runs-on: ubuntu-24.04-arm
    needs: setup_env
    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push arm64 image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/arm64
          provenance: false
          push: true
          build-args: |
            VERSION=${{ needs.setup_env.outputs.short_sha }}
            COMMIT_MSG=${{ needs.setup_env.outputs.commit_msg }}
            BUILD_START=${{ needs.setup_env.outputs.build_start }}
          tags: unbindapp/unbind-nextjs:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }}-arm64
          cache-from: type=gha,scope=arm64-nextjs
          cache-to: type=gha,scope=arm64-nextjs,mode=max

  create_manifest:
    name: 📦 Create Multi-Arch Manifest
    runs-on: ubuntu-24.04
    needs: [setup_env, build_amd64, build_arm64]
    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push manifest
        run: |
          docker manifest create unbindapp/unbind-nextjs:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }} \
            --amend unbindapp/unbind-nextjs:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }}-amd64 \
            --amend unbindapp/unbind-nextjs:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }}-arm64

          docker manifest annotate --arch amd64 --os linux unbindapp/unbind-nextjs:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }} unbindapp/unbind-nextjs:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }}-amd64
          docker manifest annotate --arch arm64 --os linux unbindapp/unbind-nextjs:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }} unbindapp/unbind-nextjs:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }}-arm64

          docker manifest push unbindapp/unbind-nextjs:${{ needs.setup_env.outputs.branch_name }}-${{ env.GITHUB_RUN_ID }}
